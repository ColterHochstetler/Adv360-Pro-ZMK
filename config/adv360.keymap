#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        customarrow-up {
            bindings = <&kp UP_ARROW>;
            key-positions = <53 24>;
        };

        customArrow-left {
            bindings = <&kp LEFT>;
            key-positions = <53 41>;
        };

        customArrow-down {
            bindings = <&kp DOWN>;
            key-positions = <53 42>;
        };

        customArrow-right {
            bindings = <&kp RIGHT>;
            key-positions = <43 53>;
        };

        DeleteCombo {
            bindings = <&kp DELETE>;
            key-positions = <46 66>;
        };

        BackspaceCombo {
            bindings = <&kp BACKSPACE>;
            key-positions = <46 65>;
        };

        SignatureChange {
            bindings = <&kp RC(RA(F6))>;
            key-positions = <67 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QGMLWYDefault {
            bindings = <
&kp ESCAPE  &kp N1     &kp N2        &kp N3    &kp N4     &kp N5  &kp NUMBER_6                                                         &mo 5                           &none  &kp N7  &kp N8     &kp N9    &kp N0         &kp EQUAL
&kp MINUS   &kp Q      &kp G         &kp M     &kp L      &kp W   &kp RA(TAB)                                                          &mt RIGHT_BRACE LEFT_BRACE      &kp Y  &kp F   &kp U      &kp B     &kp SEMICOLON  &kp BSLH
&kp TAB     &kp D      &kp S         &kp T     &kp N      &kp R   &kp F2        &kp LEFT_ALT  &to 5           &kp CAPSLOCK  &kp RCTRL  &mt RIGHT_BRACKET LEFT_BRACKET  &kp I  &kp A   &kp E      &kp O     &kp H          &kp SQT
&mo 0       &kp Z      &kp X         &kp C     &kp V      &kp J                               &kp RETURN      &lt 5 PG_UP                                              &kp K  &kp P   &kp COMMA  &kp DOT   &kp FSLH       &kp RSHFT
&mkp RCLK   &kp GRAVE  &kp LEFT_WIN  &kp LEFT  &kp RIGHT          &kp SPACE     &mkp LCLK     &kp LCTRL       &kp DELETE    &kp ENTER  &kp SPACE                              &kp UP  &kp DOWN   &kp LBKT  &kp RBKT       &mo 4
            >;
        };

        shift {
            bindings = <
&kp ESCAPE     &kp LS(N1)  &kp LS(N2)    &kp LS(N3)    &kp LS(N4)     &kp LS(N5)  &kp LS(NUMBER_6)                                                             &mo 5                           &none      &kp LS(N7)  &kp LS(N8)     &kp LS(N9)    &kp LS(N0)         &kp LS(EQUAL)
&kp LS(MINUS)  &kp LS(Q)   &kp LS(G)     &kp LS(M)     &kp LS(L)      &kp LS(W)   &kp RA(TAB)                                                                  &mt RIGHT_BRACE LEFT_BRACE      &kp LS(Y)  &kp LS(F)   &kp LS(U)      &kp LS(B)     &kp LS(SEMICOLON)  &kp LS(BSLH)
&kp LS(TAB)    &kp LS(D)   &kp LS(S)     &kp LS(T)     &kp LS(N)      &kp LS(R)   &kp LC(LA(F6))    &kp LEFT_ALT  &to 5           &kp CAPSLOCK  &kp RCTRL      &mt RIGHT_BRACKET LEFT_BRACKET  &kp LS(I)  &kp LS(A)   &kp LS(E)      &kp LS(O)     &kp LS(H)          &kp LS(SQT)
&mo 0          &kp LS(Z)   &kp LS(X)     &kp LS(C)     &kp LS(V)      &kp LS(J)                                   &kp RETURN      &lt 5 PG_UP                                                  &kp LS(K)  &kp LS(P)   &kp LS(COMMA)  &kp LS(DOT)   &kp LS(FSLH)       &kp RSHFT
&mkp RCLK      &kp GRAVE   &kp LEFT_WIN  &kp LS(LEFT)  &kp LS(RIGHT)              &kp SPACE         &mkp LCLK     &kp LCTRL       &kp DELETE    &kp LS(ENTER)  &kp SPACE                                  &kp LS(UP)  &kp LS(DOWN)   &kp LS(LBKT)  &kp LS(RBKT)       &mo 4
            >;
        };

        QWERTY {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans    &trans
&trans  &kp Q   &kp W   &kp E   &kp R   &kp T   &trans                                      &trans  &kp Y   &kp U   &kp I   &kp O   &kp P     &trans
&trans  &kp A   &kp S   &kp D   &kp F   &kp G   &trans  &trans  &to 0       &trans  &trans  &trans  &kp H   &kp J   &kp K   &kp L   &kp SEMI  &trans
&trans  &kp Z   &kp X   &kp C   &kp V   &kp B                   &trans      &trans                  &kp N   &kp M   &trans  &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans    &trans
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 5      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 4      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 4
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6     &tog 4                                                       &mo 5   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans     &none                                                        &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &kp RC(B)  &kp RC(F6)  &trans      &trans        &trans         &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                             &kp HOME      &kp PAGE_UP                    &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans             &trans      &kp DELETE  &kp END       &kp PAGE_DOWN  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &kp LC(LA(DELETE))  &none       &none           &none            &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none               &none       &kp UP_ARROW    &none            &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none               &kp LEFT    &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none               &none       &none           &none            &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                             &bl BL_INC  &bl BL_DEC      &none            &none  &none
            >;
        };
    };
};
